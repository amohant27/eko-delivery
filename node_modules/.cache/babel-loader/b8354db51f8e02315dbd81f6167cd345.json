{"ast":null,"code":"var _jsxFileName = \"/Users/ananya/Documents/Learnings/Coding/Eko_Delivery/my-app/src/components/DeliveryCost/DeliveryCost.js\";\nimport React, { Component } from 'react';\nimport { mainArr } from '../../util/directedGraph';\nimport './style.css';\nimport { Container, Form, ButtonToolbar, Button, Row, Col, FormLabel } from 'react-bootstrap';\n\nclass DeliveryCost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      objectGraph: {},\n      routeCost: 0,\n      routesArr: [],\n      error: 'Please provide the path',\n      showError: false\n    };\n    this.pathInput = React.createRef();\n  }\n\n  componentDidMount() {\n    var obj = {};\n    mainArr.map(item => {\n      var route = item.substring(0, 2);\n      var cost = item.substring(2);\n      obj[route] = Number(cost);\n      return obj;\n    });\n    this.setState({\n      objectGraph: obj\n    });\n  }\n\n  calcCost() {\n    console.log('ji');\n    var routesArr = [];\n    var cost = 0;\n    const routeGiven = this.pathInput.value;\n\n    if (this.pathInput.value) {\n      for (var i = 0; i < routeGiven.length - 1; i++) {\n        var newStr = '';\n        newStr = routeGiven.charAt(i) + routeGiven.charAt(i + 1);\n        routesArr.push(newStr);\n        cost = cost + this.state.objectGraph[newStr];\n        this.setState({\n          routesArr: routesArr\n        });\n\n        if (isNaN(cost)) {\n          cost = 'No such Route';\n        }\n\n        this.setState({\n          routeCost: cost\n        });\n      }\n    } else {\n      this.setState({\n        showError: true\n      });\n    }\n\n    return cost;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"costModule\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"font-label-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Please enter the route \"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Route : \")), React.createElement(Col, {\n      xs: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      size: \"md\",\n      type: \"text\",\n      placeholder: \"Path\",\n      ref: pathInput => {\n        this.pathInput = pathInput;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Col, {\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), this.state.showError && React.createElement(FormLabel, {\n      className: \"font-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" Please enter the route \"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Col, {\n      xs: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(ButtonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      size: \"md\",\n      active: true,\n      onClick: this.calcCost.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Calculate Cost\"))), React.createElement(Col, {\n      xs: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), this.state.routeCost !== 0 && React.createElement(FormLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Route  Cost: \", this.state.routeCost)));\n  }\n\n}\n\nexport default DeliveryCost; // <label> Route : </label>\n//     <input type=\"text\" ref={(pathInput) => { this.pathInput = pathInput }} />\n//     <div>\n//         <button type=\"button\" className=\"btn btn-primary\" onClick={this.calcCost.bind(this)}>Calculate Cost</button>\n//     </div>\n//                 {\n//     this.state.routesArr.length > 0 && (<div>\n//         <label> Route  Cost: {this.state.routeCost} </label>\n//     </div>)\n// }","map":{"version":3,"sources":["/Users/ananya/Documents/Learnings/Coding/Eko_Delivery/my-app/src/components/DeliveryCost/DeliveryCost.js"],"names":["React","Component","mainArr","Container","Form","ButtonToolbar","Button","Row","Col","FormLabel","DeliveryCost","constructor","props","state","objectGraph","routeCost","routesArr","error","showError","pathInput","createRef","componentDidMount","obj","map","item","route","substring","cost","Number","setState","calcCost","console","log","routeGiven","value","i","length","newStr","charAt","push","isNaN","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    mainArr\n} from '../../util/directedGraph';\nimport './style.css';\nimport { Container, Form, ButtonToolbar, Button, Row, Col, FormLabel } from 'react-bootstrap';\n\n\n\nclass DeliveryCost extends Component {\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            objectGraph: {},\n            routeCost: 0,\n            routesArr: [],\n            error: 'Please provide the path',\n            showError: false,\n        }\n        this.pathInput = React.createRef();\n    }\n\n    componentDidMount() {\n        var obj = {};\n        mainArr.map((item) => {\n            var route = item.substring(0, 2);\n            var cost = item.substring(2);\n            obj[route] = Number(cost);\n            return obj;\n        });\n        this.setState({ objectGraph: obj });\n    }\n\n    calcCost() {\n        console.log('ji')\n        var routesArr = [];\n        var cost = 0;\n        const routeGiven = this.pathInput.value;\n        if (this.pathInput.value){\n            for (var i = 0; i < routeGiven.length - 1; i++) {\n                var newStr = '';\n                newStr = routeGiven.charAt(i) + routeGiven.charAt(i + 1);\n                routesArr.push(newStr);\n                cost = cost + this.state.objectGraph[newStr];\n                this.setState({ routesArr: routesArr });\n                if (isNaN(cost)) {\n                    cost = 'No such Route';\n                }\n                this.setState({ routeCost: cost });\n            }\n        }else{\n            this.setState({ showError : true})\n        }\n      \n        return cost;\n    }\n\n    render() {\n        return (\n            <div className=\"costModule\">\n\n                <Container>\n                    <label className=\"font-label-heading\">Please enter the route </label>\n                    <Row>\n                        <Col xs={1}><FormLabel>Route : </FormLabel></Col>\n                        <Col xs={3}><Form.Control size=\"md\" type=\"text\" placeholder=\"Path\" ref={(pathInput) => { this.pathInput = pathInput }}></Form.Control>\n                            </Col>\n                        <Col xs={8}></Col>\n                    </Row>\n                    {this.state.showError && <FormLabel className=\"font-label\"> Please enter the route </FormLabel>}\n                    <br />\n                    <Row>\n                        <Col xs={1}></Col>\n                        <Col xs={2}>\n                            <ButtonToolbar>\n                                <Button variant=\"primary\" size=\"md\" active onClick={this.calcCost.bind(this)}>\n                                    Calculate Cost\n                                </Button>\n                            </ButtonToolbar>\n                        </Col>\n                        <Col xs={9}></Col>\n\n                    </Row>\n\n                    {this.state.routeCost !== 0 && <FormLabel>Route  Cost: {this.state.routeCost}</FormLabel>}\n                </Container>\n\n\n\n               \n              \n            </div>\n\n\n\n\n        )\n    }\n}\n\nexport default DeliveryCost;\n\n\n// <label> Route : </label>\n//     <input type=\"text\" ref={(pathInput) => { this.pathInput = pathInput }} />\n//     <div>\n//         <button type=\"button\" className=\"btn btn-primary\" onClick={this.calcCost.bind(this)}>Calculate Cost</button>\n//     </div>\n//                 {\n//     this.state.routesArr.length > 0 && (<div>\n//         <label> Route  Cost: {this.state.routeCost} </label>\n//     </div>)\n// }"]},"metadata":{},"sourceType":"module"}