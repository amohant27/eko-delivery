{"ast":null,"code":"var _jsxFileName = \"/Users/ananya/Documents/Learnings/Coding/Eko_Delivery/my-app/src/components/PossibleRoutes/PossibleRoutes.js\";\nimport React, { Component } from 'react';\nimport { parsedInput } from '../../util/directedGraph';\nimport getPossiblePaths from '../../util/possiblePath';\n\nclass PossibleRoutes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      routes: '',\n      onlyPossibleRoutesArr: [],\n      routesArr: '',\n      cheapestRoute: ''\n    };\n    this.srcInput = React.createRef();\n    this.destInput = React.createRef();\n    this.getPossibleNodes = this.getPossibleNodes.bind(this);\n    this.getRoutes = this.getRoutes.bind(this);\n    this.getCheapestRoute = this.getCheapestRoute.bind(this);\n  }\n\n  getPossibleNodes() {\n    var routes = getPossiblePaths(this.srcInput.value, this.destInput.value, parsedInput);\n    const routesArr = routes.split(';');\n    const onlyPossibleRoutesArr = [];\n    this.setState({\n      routesArr: routes\n    });\n    console.log(routes);\n    routesArr.map((route, i) => {\n      const routePerNode = route.split('=');\n      const formedRoute = this.getRoutes(routePerNode[0]);\n      onlyPossibleRoutesArr.push(formedRoute);\n      return routePerNode;\n    });\n    this.getCheapestRoute(routesArr);\n    this.setState({\n      onlyPossibleRoutesArr: onlyPossibleRoutesArr\n    });\n  }\n\n  getCheapestRoute(routes) {\n    var routeCostArr = [];\n    routes.map(item => {\n      item = item.split('=');\n      var route = item[0];\n      var costs = item[1];\n      var totalCost = 0;\n      costs = costs.split('');\n\n      for (var i = 0; i < costs.length; i++) {\n        totalCost += Number(costs[i]);\n      }\n\n      var roteCostObj = {\n        'path': route,\n        'cost': totalCost\n      };\n      routeCostArr.push(roteCostObj); // sort by value\n\n      routeCostArr.sort(function (a, b) {\n        return a.cost - b.cost;\n      });\n      console.log(routeCostArr);\n      this.setState({\n        cheapestRoute: routeCostArr[0]\n      });\n      return routeCostArr;\n    });\n  }\n\n  getRoutes(str) {\n    var newStr = '';\n\n    for (var i = 0; i <= str.length - 1; i++) {\n      let sym = '';\n\n      if (i !== str.length - 1) {\n        sym = \"-\";\n      }\n\n      var append = str[i] + sym;\n      newStr = newStr + append;\n    }\n\n    return newStr;\n  }\n\n  render() {\n    let routesFormed = '';\n\n    if (this.state.onlyPossibleRoutesArr.length > 0) {\n      routesFormed = this.state.onlyPossibleRoutesArr.map((route, index) => {\n        return React.createElement(\"li\", {\n          key: route.toString(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Route No \", index + 1, \" : \", route);\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Card, {\n      body: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"This is some text within a card body.\"));\n  }\n\n}\n\nexport default PossibleRoutes;","map":{"version":3,"sources":["/Users/ananya/Documents/Learnings/Coding/Eko_Delivery/my-app/src/components/PossibleRoutes/PossibleRoutes.js"],"names":["React","Component","parsedInput","getPossiblePaths","PossibleRoutes","constructor","props","state","routes","onlyPossibleRoutesArr","routesArr","cheapestRoute","srcInput","createRef","destInput","getPossibleNodes","bind","getRoutes","getCheapestRoute","value","split","setState","console","log","map","route","i","routePerNode","formedRoute","push","routeCostArr","item","costs","totalCost","length","Number","roteCostObj","sort","a","b","cost","str","newStr","sym","append","render","routesFormed","index","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SACIC,WADJ,QAEO,0BAFP;AAGA,OACAC,gBADA,MAES,yBAFT;;AAGA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AACnCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,qBAAqB,EAAE,EAFd;AAGTC,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,aAAa,EAAE;AAJN,KAAb;AAMA,SAAKC,QAAL,GAAgBZ,KAAK,CAACa,SAAN,EAAhB;AACA,SAAKC,SAAL,GAAiBd,KAAK,CAACa,SAAN,EAAjB;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAEDD,EAAAA,gBAAgB,GAAG;AACf,QAAIP,MAAM,GAAGL,gBAAgB,CAAC,KAAKS,QAAL,CAAcO,KAAf,EAAsB,KAAKL,SAAL,CAAeK,KAArC,EAA4CjB,WAA5C,CAA7B;AACA,UAAMQ,SAAS,GAAGF,MAAM,CAACY,KAAP,CAAa,GAAb,CAAlB;AACA,UAAMX,qBAAqB,GAAG,EAA9B;AACA,SAAKY,QAAL,CAAc;AAAEX,MAAAA,SAAS,EAAEF;AAAb,KAAd;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AAEAE,IAAAA,SAAS,CAACc,GAAV,CAAc,CAACC,KAAD,EAAQC,CAAR,KAAc;AACxB,YAAMC,YAAY,GAAGF,KAAK,CAACL,KAAN,CAAY,GAAZ,CAArB;AACA,YAAMQ,WAAW,GAAG,KAAKX,SAAL,CAAeU,YAAY,CAAC,CAAD,CAA3B,CAApB;AACAlB,MAAAA,qBAAqB,CAACoB,IAAtB,CAA2BD,WAA3B;AACA,aAAOD,YAAP;AACH,KALD;AAMA,SAAKT,gBAAL,CAAsBR,SAAtB;AACA,SAAKW,QAAL,CAAc;AAAEZ,MAAAA,qBAAqB,EAAEA;AAAzB,KAAd;AACH;;AAEDS,EAAAA,gBAAgB,CAACV,MAAD,EAAS;AACrB,QAAIsB,YAAY,GAAG,EAAnB;AACAtB,IAAAA,MAAM,CAACgB,GAAP,CAAYO,IAAD,IAAU;AAEjBA,MAAAA,IAAI,GAAGA,IAAI,CAACX,KAAL,CAAW,GAAX,CAAP;AACA,UAAIK,KAAK,GAAGM,IAAI,CAAC,CAAD,CAAhB;AACA,UAAIC,KAAK,GAAGD,IAAI,CAAC,CAAD,CAAhB;AACA,UAAIE,SAAS,GAAG,CAAhB;AAEAD,MAAAA,KAAK,GAAGA,KAAK,CAACZ,KAAN,CAAY,EAAZ,CAAR;;AACA,WAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,KAAK,CAACE,MAA1B,EAAkCR,CAAC,EAAnC,EAAuC;AACnCO,QAAAA,SAAS,IAAIE,MAAM,CAACH,KAAK,CAACN,CAAD,CAAN,CAAnB;AACH;;AAED,UAAIU,WAAW,GAAG;AAAC,gBAAQX,KAAT;AAAiB,gBAAQQ;AAAzB,OAAlB;AACAH,MAAAA,YAAY,CAACD,IAAb,CAAkBO,WAAlB,EAbiB,CAejB;;AACAN,MAAAA,YAAY,CAACO,IAAb,CAAkB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC9B,eAAOD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAlB;AACH,OAFD;AAIAlB,MAAAA,OAAO,CAACC,GAAR,CAAYO,YAAZ;AACA,WAAKT,QAAL,CAAc;AAAEV,QAAAA,aAAa,EAAEmB,YAAY,CAAC,CAAD;AAA7B,OAAd;AACA,aAAOA,YAAP;AAEH,KAxBD;AA0BH;;AAGDb,EAAAA,SAAS,CAACwB,GAAD,EAAM;AACX,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIe,GAAG,CAACP,MAAJ,GAAa,CAAlC,EAAqCR,CAAC,EAAtC,EAA0C;AACtC,UAAIiB,GAAG,GAAG,EAAV;;AACA,UAAIjB,CAAC,KAAKe,GAAG,CAACP,MAAJ,GAAa,CAAvB,EAA0B;AACtBS,QAAAA,GAAG,GAAG,GAAN;AACH;;AAED,UAAIC,MAAM,GAAGH,GAAG,CAACf,CAAD,CAAH,GAASiB,GAAtB;AACAD,MAAAA,MAAM,GAAGA,MAAM,GAAGE,MAAlB;AACH;;AACD,WAAOF,MAAP;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,QAAIC,YAAY,GAAG,EAAnB;;AACA,QAAI,KAAKvC,KAAL,CAAWE,qBAAX,CAAiCyB,MAAjC,GAA0C,CAA9C,EAAiD;AAC7CY,MAAAA,YAAY,GAAG,KAAKvC,KAAL,CAAWE,qBAAX,CAAiCe,GAAjC,CAAqC,CAACC,KAAD,EAAQsB,KAAR,KAAkB;AAClE,eAAO;AAAI,UAAA,GAAG,EAAEtB,KAAK,CAACuB,QAAN,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsCD,KAAK,GAAG,CAA9C,SAAoDtB,KAApD,CAAP;AACH,OAFc,CAAf;AAGH;;AAED,WAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADJ,CAHJ;AAUH;;AAhGkC;;AAmGvC,eAAerB,cAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n    parsedInput\n} from '../../util/directedGraph';\nimport\ngetPossiblePaths\n    from '../../util/possiblePath';\nclass PossibleRoutes extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            routes: '',\n            onlyPossibleRoutesArr: [],\n            routesArr: '',\n            cheapestRoute: '',\n        }\n        this.srcInput = React.createRef();\n        this.destInput = React.createRef();\n        this.getPossibleNodes = this.getPossibleNodes.bind(this);\n        this.getRoutes = this.getRoutes.bind(this);\n        this.getCheapestRoute = this.getCheapestRoute.bind(this);\n    }\n\n    getPossibleNodes() {\n        var routes = getPossiblePaths(this.srcInput.value, this.destInput.value, parsedInput);\n        const routesArr = routes.split(';');\n        const onlyPossibleRoutesArr = [];\n        this.setState({ routesArr: routes });\n        console.log(routes)\n\n        routesArr.map((route, i) => {\n            const routePerNode = route.split('=');\n            const formedRoute = this.getRoutes(routePerNode[0]);\n            onlyPossibleRoutesArr.push(formedRoute);\n            return routePerNode;\n        });\n        this.getCheapestRoute(routesArr);\n        this.setState({ onlyPossibleRoutesArr: onlyPossibleRoutesArr })\n    }\n\n    getCheapestRoute(routes) {\n        var routeCostArr = [];\n        routes.map((item) => {\n\n            item = item.split('=');\n            var route = item[0];\n            var costs = item[1];\n            var totalCost = 0;\n\n            costs = costs.split('');\n            for (var i = 0; i < costs.length; i++) {\n                totalCost += Number(costs[i]);\n            }\n\n            var roteCostObj = {'path': route,  'cost': totalCost };\n            routeCostArr.push(roteCostObj);\n\n            // sort by value\n            routeCostArr.sort(function (a, b) {\n                return a.cost - b.cost;\n            });\n\n            console.log(routeCostArr);\n            this.setState({ cheapestRoute: routeCostArr[0] })\n            return routeCostArr;\n\n        })\n\n    }\n\n\n    getRoutes(str) {\n        var newStr = '';\n        for (var i = 0; i <= str.length - 1; i++) {\n            let sym = '';\n            if (i !== str.length - 1) {\n                sym = \"-\"\n            }\n\n            var append = str[i] + sym;\n            newStr = newStr + append;\n        }\n        return newStr;\n    }\n\n    render() {\n        let routesFormed = '';\n        if (this.state.onlyPossibleRoutesArr.length > 0) {\n            routesFormed = this.state.onlyPossibleRoutesArr.map((route, index) => {\n                return <li key={route.toString()} >Route No {index + 1} : {route}</li>;\n            })\n        }\n\n        return (\n\n           \n            <div>\n                <Card body>This is some text within a card body.</Card>\n                \n            </div>\n\n\n        )\n    }\n}\n\nexport default PossibleRoutes;"]},"metadata":{},"sourceType":"module"}