{"ast":null,"code":"export const mainArr = ['AB1', 'AC4', 'AD10', 'BE3', 'CD4', 'CF2', 'DE1', 'EB3', 'EA2', 'FD1'];\nexport const onlyRoutes = mainArr.map(item => {\n  return item.substring(0, 2);\n});\nvar onlyStartPos = mainArr.map(item => {\n  return item.substring(0, 1);\n});\nlet uniqueonlyStartPos = onlyStartPos.filter((item, i, ar) => ar.indexOf(item) === i); // console.log(uniqueonlyStartPos);\n\nvar graphArr = {};\nuniqueonlyStartPos.forEach(startPos => {\n  graphArr[startPos] = [];\n  mainArr.forEach(route => {\n    if (route.charAt(0) == startPos) {\n      var newObj = {};\n      newObj[route.substring(1, 2)] = route.substring(2, route.length);\n      graphArr[startPos].push(newObj);\n    }\n  });\n}); // console.log(graphArr);\n\nconst convertArrayToObject = obj => {\n  var finalNeededObj = {};\n  Object.keys(obj).map((key, value) => {\n    var eachObj = obj[key];\n    var eachPair = {};\n\n    for (var i = 0; i < eachObj.length; i++) {\n      Object.keys(eachObj[i]).map((key, value) => {\n        eachPair[key] = eachObj[i][key];\n      });\n    }\n\n    finalNeededObj[key] = eachPair;\n  });\n  return finalNeededObj;\n};\n\nvar newObj = convertArrayToObject(graphArr);\nconsole.log('final', newObj);","map":{"version":3,"sources":["/Users/ananya/Documents/Learnings/Coding/Eko_Delivery/my-app/src/util/directedGraph.js"],"names":["mainArr","onlyRoutes","map","item","substring","onlyStartPos","uniqueonlyStartPos","filter","i","ar","indexOf","graphArr","forEach","startPos","route","charAt","newObj","length","push","convertArrayToObject","obj","finalNeededObj","Object","keys","key","value","eachObj","eachPair","console","log"],"mappings":"AACA,OAAO,MAAMA,OAAO,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC,KAArC,EAA4C,KAA5C,EAAmD,KAAnD,EAA0D,KAA1D,EAAiE,KAAjE,CAAhB;AACP,OAAO,MAAMC,UAAU,GAAGD,OAAO,CAACE,GAAR,CAAaC,IAAD,IAAU;AAC5C,SAAOA,IAAI,CAACC,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAP;AACH,CAFyB,CAAnB;AAKP,IAAIC,YAAY,GAAGL,OAAO,CAACE,GAAR,CAAaC,IAAD,IAAU;AACrC,SAAOA,IAAI,CAACC,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAP;AACH,CAFkB,CAAnB;AAMA,IAAIE,kBAAkB,GAAGD,YAAY,CAACE,MAAb,CAAoB,CAACJ,IAAD,EAAOK,CAAP,EAAUC,EAAV,KAAiBA,EAAE,CAACC,OAAH,CAAWP,IAAX,MAAqBK,CAA1D,CAAzB,C,CACA;;AACA,IAAIG,QAAQ,GAAG,EAAf;AACAL,kBAAkB,CAACM,OAAnB,CAA4BC,QAAD,IAAc;AACrCF,EAAAA,QAAQ,CAACE,QAAD,CAAR,GAAqB,EAArB;AACAb,EAAAA,OAAO,CAACY,OAAR,CAAiBE,KAAD,IAAW;AACvB,QAAIA,KAAK,CAACC,MAAN,CAAa,CAAb,KAAmBF,QAAvB,EAAiC;AAE7B,UAAIG,MAAM,GAAG,EAAb;AAEAA,MAAAA,MAAM,CAACF,KAAK,CAACV,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,CAAN,GAAgCU,KAAK,CAACV,SAAN,CAAgB,CAAhB,EAAmBU,KAAK,CAACG,MAAzB,CAAhC;AAEAN,MAAAA,QAAQ,CAACE,QAAD,CAAR,CAAmBK,IAAnB,CAAwBF,MAAxB;AACH;AACJ,GATD;AAUH,CAZD,E,CAcA;;AAKA,MAAMG,oBAAoB,GAAIC,GAAD,IAAS;AAClC,MAAIC,cAAc,GAAG,EAArB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBlB,GAAjB,CAAqB,CAACsB,GAAD,EAAMC,KAAN,KAAgB;AAGjC,QAAIC,OAAO,GAAGN,GAAG,CAACI,GAAD,CAAjB;AACA,QAAIG,QAAQ,GAAG,EAAf;;AAEA,SAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkB,OAAO,CAACT,MAA5B,EAAoCT,CAAC,EAArC,EAAyC;AAErCc,MAAAA,MAAM,CAACC,IAAP,CAAYG,OAAO,CAAClB,CAAD,CAAnB,EAAwBN,GAAxB,CAA4B,CAACsB,GAAD,EAAMC,KAAN,KAAgB;AACxCE,QAAAA,QAAQ,CAACH,GAAD,CAAR,GAAgBE,OAAO,CAAClB,CAAD,CAAP,CAAWgB,GAAX,CAAhB;AAEH,OAHD;AAIH;;AACDH,IAAAA,cAAc,CAACG,GAAD,CAAd,GAAsBG,QAAtB;AACH,GAdD;AAeA,SAAON,cAAP;AACH,CAlBD;;AAqBA,IAAIL,MAAM,GAAGG,oBAAoB,CAACR,QAAD,CAAjC;AACAiB,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBb,MAArB","sourcesContent":["\nexport const mainArr = ['AB1', 'AC4', 'AD10', 'BE3', 'CD4', 'CF2', 'DE1', 'EB3', 'EA2', 'FD1'];\nexport const onlyRoutes = mainArr.map((item) => {\n    return item.substring(0, 2);\n})\n\n\nvar onlyStartPos = mainArr.map((item) => {\n    return item.substring(0, 1);\n});\n\n\n\nlet uniqueonlyStartPos = onlyStartPos.filter((item, i, ar) => ar.indexOf(item) === i);\n// console.log(uniqueonlyStartPos);\nvar graphArr = {};\nuniqueonlyStartPos.forEach((startPos) => {\n    graphArr[startPos] = [];\n    mainArr.forEach((route) => {\n        if (route.charAt(0) == startPos) {\n\n            var newObj = {};\n\n            newObj[route.substring(1, 2)] = route.substring(2, route.length);\n\n            graphArr[startPos].push(newObj);\n        }\n    })\n});\n\n// console.log(graphArr);\n\n\n\n\nconst convertArrayToObject = (obj) => {\n    var finalNeededObj = {};\n    Object.keys(obj).map((key, value) => {\n\n\n        var eachObj = obj[key];\n        var eachPair = {};\n\n        for (var i = 0; i < eachObj.length; i++) {\n\n            Object.keys(eachObj[i]).map((key, value) => {\n                eachPair[key] = eachObj[i][key]\n\n            })\n        }\n        finalNeededObj[key] = eachPair;\n    })\n    return finalNeededObj;\n};\n\n\nvar newObj = convertArrayToObject(graphArr);\nconsole.log('final', newObj)\n"]},"metadata":{},"sourceType":"module"}