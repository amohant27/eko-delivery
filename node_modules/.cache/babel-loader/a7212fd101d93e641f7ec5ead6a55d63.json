{"ast":null,"code":"export const mainArr = ['AB1', 'AC4', 'AD10', 'BE3', 'CD4', 'CF2', 'DE1', 'EB3', 'EA2', 'FD1'];\nexport const onlyRoutes = mainArr.map(item => {\n  return item.substring(0, 2);\n});\nvar onlyStartPos = mainArr.map(item => {\n  return item.substring(0, 1);\n});\nvar graphArr = {};\nlet uniqueonlyStartPos = onlyStartPos.filter((item, i, ar) => ar.indexOf(item) === i);\nuniqueonlyStartPos.forEach(startPos => {\n  graphArr[startPos] = [];\n  mainArr.forEach(route => {\n    if (route.charAt(0) === startPos) {\n      var newObj = {};\n      newObj[route.substring(1, 2)] = route.substring(2, route.length);\n      graphArr[startPos].push(newObj);\n    }\n  });\n});\n\nconst convertArrayToObject = obj => {\n  var finalNeededObj = {};\n  Object.keys(obj).map(key => {\n    var eachObj = obj[key];\n    var eachPair = {};\n\n    for (var i = 0; i < eachObj.length; i++) {\n      // eslint-disable-next-line \n      Object.keys(eachObj[i]).map(key => {\n        eachPair[key] = eachObj[i][key];\n      });\n    }\n\n    finalNeededObj[key] = eachPair;\n    return finalNeededObj;\n  });\n  return finalNeededObj;\n};\n\nexport const parsedInput = convertArrayToObject(graphArr);","map":{"version":3,"sources":["/Users/ananya/Documents/Learnings/Coding/Eko_Delivery/my-app/src/util/directedGraph.js"],"names":["mainArr","onlyRoutes","map","item","substring","onlyStartPos","graphArr","uniqueonlyStartPos","filter","i","ar","indexOf","forEach","startPos","route","charAt","newObj","length","push","convertArrayToObject","obj","finalNeededObj","Object","keys","key","eachObj","eachPair","parsedInput"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,MAAf,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC,KAArC,EAA4C,KAA5C,EAAmD,KAAnD,EAA0D,KAA1D,EAAiE,KAAjE,CAAhB;AACP,OAAO,MAAMC,UAAU,GAAGD,OAAO,CAACE,GAAR,CAAaC,IAAD,IAAU;AAAE,SAAOA,IAAI,CAACC,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAP;AAA4B,CAApD,CAAnB;AACP,IAAIC,YAAY,GAAGL,OAAO,CAACE,GAAR,CAAaC,IAAD,IAAU;AAAC,SAAOA,IAAI,CAACC,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAP;AAA6B,CAApD,CAAnB;AACA,IAAIE,QAAQ,GAAG,EAAf;AAEA,IAAIC,kBAAkB,GAAGF,YAAY,CAACG,MAAb,CAAoB,CAACL,IAAD,EAAOM,CAAP,EAAUC,EAAV,KAAiBA,EAAE,CAACC,OAAH,CAAWR,IAAX,MAAqBM,CAA1D,CAAzB;AAEAF,kBAAkB,CAACK,OAAnB,CAA4BC,QAAD,IAAc;AACrCP,EAAAA,QAAQ,CAACO,QAAD,CAAR,GAAqB,EAArB;AACAb,EAAAA,OAAO,CAACY,OAAR,CAAiBE,KAAD,IAAW;AACvB,QAAIA,KAAK,CAACC,MAAN,CAAa,CAAb,MAAoBF,QAAxB,EAAkC;AAC9B,UAAIG,MAAM,GAAG,EAAb;AACAA,MAAAA,MAAM,CAACF,KAAK,CAACV,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,CAAN,GAAgCU,KAAK,CAACV,SAAN,CAAgB,CAAhB,EAAmBU,KAAK,CAACG,MAAzB,CAAhC;AACAX,MAAAA,QAAQ,CAACO,QAAD,CAAR,CAAmBK,IAAnB,CAAwBF,MAAxB;AACH;AACJ,GAND;AAOH,CATD;;AAWA,MAAMG,oBAAoB,GAAIC,GAAD,IAAS;AAClC,MAAIC,cAAc,GAAG,EAArB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,GAAZ,EAAiBlB,GAAjB,CAAsBsB,GAAD,IAAS;AAC1B,QAAIC,OAAO,GAAGL,GAAG,CAACI,GAAD,CAAjB;AACA,QAAIE,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIjB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgB,OAAO,CAACR,MAA5B,EAAoCR,CAAC,EAArC,EAAyC;AACrC;AACAa,MAAAA,MAAM,CAACC,IAAP,CAAYE,OAAO,CAAChB,CAAD,CAAnB,EAAwBP,GAAxB,CAA6BsB,GAAD,IAAS;AACjCE,QAAAA,QAAQ,CAACF,GAAD,CAAR,GAAgBC,OAAO,CAAChB,CAAD,CAAP,CAAWe,GAAX,CAAhB;AACH,OAFD;AAGH;;AACDH,IAAAA,cAAc,CAACG,GAAD,CAAd,GAAsBE,QAAtB;AACA,WAAOL,cAAP;AACH,GAXD;AAYA,SAAOA,cAAP;AACH,CAfD;;AAkBA,OAAO,MAAMM,WAAW,GAAGR,oBAAoB,CAACb,QAAD,CAAxC","sourcesContent":["export const mainArr = ['AB1', 'AC4', 'AD10', 'BE3', 'CD4', 'CF2', 'DE1', 'EB3', 'EA2', 'FD1'];\nexport const onlyRoutes = mainArr.map((item) => { return item.substring(0, 2)});\nvar onlyStartPos = mainArr.map((item) => {return item.substring(0, 1);});\nvar graphArr = {};\n\nlet uniqueonlyStartPos = onlyStartPos.filter((item, i, ar) => ar.indexOf(item) === i);\n\nuniqueonlyStartPos.forEach((startPos) => {\n    graphArr[startPos] = [];\n    mainArr.forEach((route) => {\n        if (route.charAt(0) === startPos) {\n            var newObj = {};\n            newObj[route.substring(1, 2)] = route.substring(2, route.length);\n            graphArr[startPos].push(newObj);\n        }\n    })\n});\n\nconst convertArrayToObject = (obj) => {\n    var finalNeededObj = {};\n    Object.keys(obj).map((key) => {\n        var eachObj = obj[key];\n        var eachPair = {};\n        for (var i = 0; i < eachObj.length; i++) {\n            // eslint-disable-next-line \n            Object.keys(eachObj[i]).map((key) => {\n                eachPair[key] = eachObj[i][key]\n            })\n        }\n        finalNeededObj[key] = eachPair;\n        return finalNeededObj;\n    })\n    return finalNeededObj;\n};\n\n\nexport const parsedInput = convertArrayToObject(graphArr);\n\n"]},"metadata":{},"sourceType":"module"}